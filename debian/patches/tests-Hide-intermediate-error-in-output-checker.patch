From: Benjamin Berg <bberg@redhat.com>
Date: Tue, 10 May 2022 09:50:10 +0200
Subject: tests: Hide intermediate error in output checker

The output checker raises from an exception handler. Add the appropriate
"from None" to hide that intermediate exception.

Origin: https://gitlab.freedesktop.org/libfprint/fprintd/-/commit/27b618a9
---
 tests/output_checker.py | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/tests/output_checker.py b/tests/output_checker.py
index 265e323..d1a8c4c 100644
--- a/tests/output_checker.py
+++ b/tests/output_checker.py
@@ -98,16 +98,16 @@ class OutputChecker(object):
                 # EOF, throw error
                 if self._pipe_fd_r == -1:
                     if failmsg:
-                        raise AssertionError("No further messages: " % failmsg)
+                        raise AssertionError("No further messages: " % failmsg) from None
                     else:
-                        raise AssertionError('No client waiting for needle %s' % (str(needle_re)))
+                        raise AssertionError('No client waiting for needle %s' % (str(needle_re))) from None
 
                 # Check if should wake up
                 if not self._lines_sem.acquire(timeout = deadline - time.time()):
                     if failmsg:
-                        raise AssertionError(failmsg)
+                        raise AssertionError(failmsg) from None
                     else:
-                        raise AssertionError('Timed out waiting for needle %s (timeout: %0.2f)' % (str(needle_re), timeout))
+                        raise AssertionError('Timed out waiting for needle %s (timeout: %0.2f)' % (str(needle_re), timeout)) from None
                 continue
 
             ret.append(l)
